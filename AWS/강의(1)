자체 데이터 베이스 센터 vs CLOUD COMPUTING -> 필요할 때 언제나/사용한 만큼만 지불/유연한 용량/적은 노력(어느 정도 학습이 되면!)

- CLOUD COMPUTING의 장점
1) 초기 선 투자 비용 없음 -> 물론 트래픽이 많거나 항상 켜져 있어야 할 경우 oN-PREMISE가 더 나을수도 있다. 선투자 비용이 없다는 뜻.
2) 운영 비용 절감 -> 간과하기 쉬운 숨은 비용들(전력 비용, 항온항습 비용, 상면비용, 운영관리비용, 라이선스 비용, 향후 증설 비용) 
3) 탄력적인 운영 및 확장 -> 이벤트 등의 이유로 TRAFFIC이 급증하는 사태가 벌어질 경우, 프로그램 코드로 CLOUD COMPUTING은 이에 즉각적인 대응이 가능! (EX) 쿠팡은 전부 AWS) 
4) 속도 및 민첩성 -> 특히 게임사에서 일주일 내에 주로 판가름이 남.
5) 비즈니스에만 집중 가능
6) 글로벌 확장 -> CDN(콘텐츠 전송 네트워크)

* 클라우드 기반 또는 태생의 기업들이 글로벌하게 성공하는 경우가 흔하게 발생 => 새로운 시도, 민첩성 (호텔/숙박업, 식당평가, 모바일게임, 음식/배달서비스, 부동산중개업)

-----------------------------------------
* EC2와 VPC
	1) EC2
		- Amazon Elastic Compute Cloud(Amazon EC2)는 Amazon Web Services(AWS) 클라우드에서 확장식 컴퓨팅을 제공.
		- EC2는 안전하고 크기 조정이 가능한 컴퓨팅 파워를 클라우드에서 제공하는 웹 서비스입니다. 개발자가 더 쉽게 웹 규모의 클라우드 컴퓨팅 작업을 할 수 있도록 설계되었습니다.
	2) VPC
		- Amazon Virtual Private Cloud(Amazon VPC)에서는 사용자가 정의한 가상 네트워크로 AWS 리소스를 시작할 수 있습니다.
		- 사용자들은 이 환경 위에서 EC2 인스턴스와 RDS 데이터베이스를 비롯한 다양한 리소스들을 생성해서 사용.
		- VPC는 프라이빗 클라우드를 만드는 데 가장 기본이 되는 리소스로, 논리적인 독립 네트워크를 구성하는 리소스입 이름과 IPv4 CIDR 블록을 필수적으로 가집니다.
			+ CIDR 블록은 IP의 범위를 지정하는 방식입니다. CIDR 블록은 IP 주소와 슬래시(/) 뒤에 따라오는 넷마스크 숫자로 구성되어있습니다. 이 숫자는 IP 범위를 나타냅니다. 이 숫자가 32이면 앞에 기술된 IP 정확히 하나를 가리킵니다. 예를 들어 192.168.0.0/32는 192.168.0.0을 가리킵니다. 범위는 지정된 IP부터 2^(32-n)개가 됩니다.
			+ 예를 들어 뒤의 숫자가 24라면, 2^(32-24)=256개의 IP 주소를 의미합니다.
		* 서브넷(Subnet)
			+ VPC만 가지고는 아직 아무것도 할 수 없습니다. VPC는 다시 한 번 CIDR 블록을 가지는 단위로 나눠집니다.
			+ 서브넷은 실제로 리소스가 생성되는 물리적인 공간인 가용존Available Zone과 연결됩니다. VPC가 논리적인 범위를 의미한다면, 서브넷은 VPC 안에서 실제로 리소스가 생성될 수 있는 네트워크라고 생각할 수 있습니다. 
		* 라우트 테이블(Route Table)
			+ 라우트 테이블은 서브넷과 연결되어있는 리소스입니다. 서브넷에서 네트워크를 이용할 때는 이 라우트 테이블을 사용해서 목적지를 찾게 됩니다.
			+ 라우트 테이블은 서브넷과 연결되어있지만 VPC를 생성할 때 만들어지고 VPC에도 연결되어 있습니다.
		* 인터넷 게이트웨이(Internet Gateway)
			+ VPC는 기본적으로 격리되 네트워크 환경입니다. 따라서 VPC에서 생성된 리소스들은 기본적으로 인터넷을 사용할 수가 없습니다. 인터넷에 연결하기 위해서는 인터넷 게이트웨이가 필요합니다. 라우팅 테이블에 인터넷 게이트웨이를 향하는 적절한 규칙을 추가해주면 특정 서브넷이 인터넷과 연결됩니다.
			+ 하지만 서브넷과 인터넷 게이트웨이를 연결하는 것만으로는 인터넷을 사용할 수 없습니다. 인터넷을 사용하고자 하는 리소스는 퍼블릭 IP를 가지고 있어야합니다.
-----------------------------------------
* Load Balancing이란?
	-하나의 인터넷 서비스가 발생하는 트래픽이 많을 때 여러 대의 서버가 분산처리하여 서버의 로드율 증가, 부하량, 속도저하 등을 고려하여 적절히 분산처리하여 해결해주는 서비스입니다.
	- 주요 기능
		1) NAT(Network Address Translation)
			+ 사설 IP 주소를 공인 IP 주소로 바꾸는 데 사용하는 통신망의 주소 변조기입니다.
		2) Tunneling
			+ 인터넷상에서 눈에 보이지 않는 통로를 만들어 통신할 수 있게 하는 개념
			+ 데이터를 캡슐화해서 연결된 상호 간에만 캡슐화된 패킷을 구별해 캡슐화를 해제할 수 있습니다.
		3) DSR(Dynamic Source Routing protocol)
			+ 로드 밸런서 사용 시 서버에서 클라이언트로 되돌아가는 경우 목적지 주소를 스위치의 IP 주소가 아닌 클라이언트의 IP 주소로 전달해서 네트워크 스위치를 거치지 않고 바로 클라이언트를 찾아가는 개념입니다.
			
			---------------------------------------------
EC2와 RDS 비용이 제일 많이 나간다 -> 이 둘의 비용을 줄이는 것이 핵심!

1) Trusted Advisor -> 성능, 보한, 이중화 구성, 서비스 제안 등 필요한 것을 제안.
2) Rightsizing
3) 인스턴스 타입 -> 비용 절감에 가장 중요한 요소 중 하나.
