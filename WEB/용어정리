1. DAO
- Data Access Object의 약자.
- Service와 DB를 연결하는 고리의 역할을 한다.

2. DTO
- Data Transfer Object)의 약자.
- 계층간 데이터 교환을 위한 객체(Java Beans)로, DB에서 데이터를 얻어 Service나 Controller 등으로 보낼 때 사용하는 객체를 말한다.
- 로직을 갖고 있지 않는 순수한 데이터 객체이며, getter/setter 메서드만을 갖는다.

3. VO
- VO는 DTO와 동일한 개념이지만 read only 속성을 갖는다.
- VO는 특정한 비즈니스 값을 담는 객체이고, DTO는 Layer간의 통신 용도로 오고가는 객체를 말한다.

3. Controller
- 해당 요청 url에 따라 적절한 view와 mapping 처리
- @Autowired Service를 통해 service의 method를 이용
- 적절한 ResponseEntity(DTO)를 body에 담아 Client에 반환.

4. service
- @Autowired Repository를 통해 repository의 method를 이용
- 적절한 Business Logic을 처리한다.
- DAO로 DB에 접근하고 DTO로 데이터를 전달받은 다음, 비지니스 로직을 처리해 적절한 데이터를 반환한다.

5. Request, Response
- 클라이언트로 요청이 들어오면 WAS는 HttpServletRequest와 HttpServletResponse 객체를 생성해 요청정보에 있는 패스로 매핑된 서블릿에게 전달한다.
- 이렇게 전달받은 내용들을 파라미터로 doGet, doPost 등에 전달된다.
- request 객체에는 클라이언트가 요청한 정보에 대한 값을 가지고 있다.
- response 객체는 jsp 페이지의 실행 결과를 웹 브라우저에게 되돌려 줄 때 사용되는 객체.
